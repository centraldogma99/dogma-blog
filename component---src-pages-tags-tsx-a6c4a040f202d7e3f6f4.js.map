{"version":3,"file":"component---src-pages-tags-tsx-a6c4a040f202d7e3f6f4.js","mappings":"qIAIA,IAAMA,EAAQ,6IAAd,gDAuBA,IAbe,SAACC,GACd,OACE,QAAC,KAAD,CACEC,GAAE,SAAWD,EAAME,IACnBC,IAAG,IAIH,eAAKA,IAAKJ,GAAV,KAA0BC,EAAME,Q,wHCFtC,EAlBqB,SAACE,EAAkBC,GACtC,OAAwCC,EAAAA,EAAAA,UAAmB,IAApDC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbL,EACFI,EAAgBH,OACX,CACL,IAAMK,EAAmBN,EAASO,cAC5BC,EAAIP,EACPQ,KAAI,SAAAX,GAAG,OAAIA,EAAIS,iBACfG,QAAO,SAAAZ,GAAG,OAAIA,EAAIa,SAASL,MAC9BF,EAAgBI,MAEjB,CAACR,IAEG,CAAEG,aAAAA,I,UC6CX,EAhDiB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KAClB,GAAgCV,EAAAA,EAAAA,UAAiB,IAA1CF,EAAP,KAAiBa,EAAjB,KAEMZ,EAAOW,EAAKE,OAAOC,MAAMC,QAAO,SAACR,EAAGS,GACxC,OAAIT,EAAEU,OACE,GAAN,eAAWV,GAAX,CAAcS,EAAEnB,MAET,CAACU,EAAEV,IAAKmB,EAAEnB,QAIbK,EAAiBgB,EAAanB,EAAUC,GAAxCE,aAER,OACE,QAACiB,EAAA,EAAD,CAAOC,MAAM,aACX,eAAKtB,IAAKuB,EAAAA,KACR,gBAAMvB,IAAKwB,EAAAA,IAAX,MACA,iBACEC,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOH,QACpCI,YAAY,QACZ9B,IAAK+B,EAAAA,GACLC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,WAAW,YAGf,QAAC,KAAD,KACG/B,EAAaM,KAAI,SAAAX,GAAG,OACnB,QAACqC,EAAA,EAAD,CAAQrC,IAAKA,EAAKsC,IAAKtC,W,4IC1C1B,IAAMwB,EAAoB,qIASpBC,EAAK,0EAMLO,EAAW,yGAUXO,GAAmB","sources":["webpack://dogma-blog/./src/components/TagBtn.tsx","webpack://dogma-blog/./src/hooks/useTagSearch.ts","webpack://dogma-blog/./src/pages/tags.tsx","webpack://dogma-blog/./src/styles/tags.ts"],"sourcesContent":["/** @jsx jsx */\nimport { Link } from 'gatsby';\nimport { css, jsx } from '@emotion/react';\n\nconst btnStyle = css`\n  border: 0;\n  background-color: dodgerblue;\n  color: white;\n  padding: 3px 5px;\n  margin-right: 7px;\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nconst TagBtn = (props: { tag: string }) => {\n  return (\n    <Link\n      to={`/tags/${props.tag}`}\n      css={css`\n        text-decoration: none;\n      `}\n    >\n      <div css={btnStyle}>{`# ${props.tag}`}</div>\n    </Link>\n  );\n};\n\nexport default TagBtn;\n","import { useState, useEffect } from 'react';\n\nconst useTagSearch = (tagInput: string, tags: string[]) => {\n  const [matchingTags, setMatchingTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (tagInput === '') {\n      setMatchingTags(tags);\n    } else {\n      const tagInputUncapped = tagInput.toLowerCase();\n      const a = tags\n        .map(tag => tag.toLowerCase())\n        .filter(tag => tag.includes(tagInputUncapped));\n      setMatchingTags(a);\n    }\n  }, [tagInput]);\n\n  return { matchingTags };\n};\n\nexport default useTagSearch;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport { graphql } from 'gatsby';\nimport Frame from '../components/Frame';\nimport TagBtn from '../components/TagBtn';\nimport { useState } from 'react';\nimport useTagSearch from '../hooks/useTagSearch';\nimport {\n  searchInputContainer,\n  searchInput,\n  sharp,\n  TagButtonsContainer,\n} from '../styles/tags';\n\nconst TagsPage = ({ data }) => {\n  const [tagInput, setTagInput] = useState<string>('');\n\n  const tags = data.allMdx.group.reduce((a, b) => {\n    if (a.length) {\n      return [...a, b.tag];\n    } else {\n      return [a.tag, b.tag];\n    }\n  });\n\n  const { matchingTags } = useTagSearch(tagInput, tags);\n\n  return (\n    <Frame title=\"태그로 검색하기\">\n      <div css={searchInputContainer}>\n        <span css={sharp}>#</span>\n        <input\n          type=\"text\"\n          value={tagInput}\n          onChange={e => setTagInput(e.target.value)}\n          placeholder=\"태그 검색\"\n          css={searchInput}\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\"\n        />\n      </div>\n      <TagButtonsContainer>\n        {matchingTags.map(tag => (\n          <TagBtn tag={tag} key={tag} />\n        ))}\n      </TagButtonsContainer>\n    </Frame>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMdx(filter: { frontmatter: { draft: { eq: false } } }) {\n      group(field: frontmatter___tag) {\n        tag: fieldValue\n      }\n    }\n  }\n`;\n\nexport default TagsPage;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const searchInputContainer = css`\n  display: flex;\n  flex-direction: row;\n  border-radius: 4px;\n  border: 1px solid gainsboro;\n  width: 240px;\n  margin-bottom: 13px;\n`;\n\nexport const sharp = css`\n  margin-left: 7px;\n  margin-right: 4px;\n  font-size: 20px;\n`;\n\nexport const searchInput = css`\n  flex: 1;\n  border: none;\n  padding: 6px;\n  font-size: 18px;\n  &:focus {\n    outline: none !important;\n  }\n`;\n\nexport const TagButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n"],"names":["btnStyle","props","to","tag","css","tagInput","tags","useState","matchingTags","setMatchingTags","useEffect","tagInputUncapped","toLowerCase","a","map","filter","includes","data","setTagInput","allMdx","group","reduce","b","length","useTagSearch","Frame","title","searchInputContainer","sharp","type","value","onChange","e","target","placeholder","searchInput","autoComplete","autoCorrect","autoCapitalize","spellCheck","TagBtn","key","TagButtonsContainer"],"sourceRoot":""}