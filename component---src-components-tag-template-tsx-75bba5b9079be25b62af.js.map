{"version":3,"file":"component---src-components-tag-template-tsx-75bba5b9079be25b62af.js","mappings":"qIAIA,IAAMA,EAAQ,6IAAd,gDAuBA,IAbe,SAACC,GACd,OACE,QAAC,KAAD,CACEC,GAAE,SAAWD,EAAME,IACnBC,IAAG,IAIH,eAAKA,IAAKJ,GAAV,KAA0BC,EAAME,Q,2IChBtC,IAAME,EAAc,gHAQdC,EAAU,gGAQVC,EAAS,gEAAf,8FAsCA,EAhCqB,SAACN,GAKf,IAAD,EACJ,OACE,eACEG,IAAG,IAIH,QAAC,KAAD,eACGH,EAAMO,YADT,aACG,EAAYC,KAAI,SAAAN,GAAG,OAClB,QAACO,EAAA,EAAD,CAAQP,IAAKA,EAAKQ,IAAKR,SAG3B,QAAC,KAAD,CACED,GAAID,EAAMW,OACVR,IAAG,IAIH,eAAKA,IAAKC,IACR,aAAGD,IAAKE,GAAaL,EAAMY,QAC3B,aAAGT,IAAKG,GAAYN,EAAMa,UCwBpC,EArEgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACjBC,EAAcF,EAAKG,QAAQC,MAAMV,KAAI,SAAAW,GAAI,OAAIA,EAAKC,YACxD,GAA0BC,EAAAA,EAAAA,UAAgBL,EAAKM,MAAM,EAJtC,IAIRC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUC,GAC3B,WACLF,OAAOG,oBAAoB,SAAUD,MAEtC,IAEH,IAAMA,GAAWE,EAAAA,EAAAA,cACf,SAAAC,GAEIL,OAAOM,YAAcN,OAAOO,aAAeC,SAASC,KAAKC,cAGrDb,EAAMc,OAASrB,EAAKqB,QACtBb,GAAS,SAAAc,GAAI,wBACRA,IADQ,OAERtB,EAAKM,MAAMgB,EAAKD,OAAQC,EAAKD,OAtB3B,UA4Bb,CAACd,EAAOP,EA5BK,IA+Bf,OACE,QAACuB,EAAA,EAAD,CAAO3B,MAAOG,EAAYb,IAAZ,KAAuBa,EAAYb,IAAnC,WACZ,mBACGqB,EAAMf,KAAI,SAAAgC,GAAG,OACZ,QAAC,EAAD,CACE7B,OAAM,UAAY6B,EAAIC,KACtB7B,MAAO4B,EAAIE,YAAY9B,MACvBC,KAAM2B,EAAIE,YAAY7B,KACtBN,KAAMiC,EAAIE,YAAYxC,IAAIyC,OAC1BjC,IAAK8B,EAAIC,c,4IC3Cd,IAAMG,EAAoB,qIASpBC,EAAK,0EAMLC,EAAW,yGAUXC,GAAmB","sources":["webpack://dogma-blog/./src/components/TagBtn.tsx","webpack://dogma-blog/./src/components/PostListItem.tsx","webpack://dogma-blog/./src/components/tagTemplate.tsx","webpack://dogma-blog/./src/styles/tags.ts"],"sourcesContent":["/** @jsx jsx */\nimport { Link } from 'gatsby';\nimport { css, jsx } from '@emotion/react';\n\nconst btnStyle = css`\n  border: 0;\n  background-color: dodgerblue;\n  color: white;\n  padding: 3px 5px;\n  margin-right: 7px;\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nconst TagBtn = (props: { tag: string }) => {\n  return (\n    <Link\n      to={`/tags/${props.tag}`}\n      css={css`\n        text-decoration: none;\n      `}\n    >\n      <div css={btnStyle}>{`# ${props.tag}`}</div>\n    </Link>\n  );\n};\n\nexport default TagBtn;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport TagBtn from './TagBtn';\nimport { TagButtonsContainer } from '../styles/tags';\n\nconst containerStyle = css`\n  padding: 20px;\n  padding-top: 12px;\n  margin-bottom: 20px;\n  background-color: #ccc;\n  cursor: pointer;\n`;\n\nconst titleStyle = css`\n  margin: 0;\n  color: black;\n  font-size: 24px;\n  margin-bottom: 15px;\n  font-weight: 650;\n`;\n\nconst dateStyle = css`\n  margin: 0;\n  color: #222222;\n  font-size: 15px;\n`;\n\nconst PostListItem = (props: {\n  title: string;\n  date: string;\n  linkTo: string;\n  tags?: string[];\n}) => {\n  return (\n    <div\n      css={css`\n        margin-bottom: 30px;\n      `}\n    >\n      <TagButtonsContainer>\n        {props.tags?.map(tag => (\n          <TagBtn tag={tag} key={tag} />\n        ))}\n      </TagButtonsContainer>\n      <Link\n        to={props.linkTo}\n        css={css`\n          text-decoration: none;\n        `}\n      >\n        <div css={containerStyle}>\n          <p css={titleStyle}>{props.title}</p>\n          <p css={dateStyle}>{props.date}</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default PostListItem;\n","import { graphql } from 'gatsby';\nimport { useState, useCallback, useEffect } from 'react';\nimport Frame from './Frame';\nimport PostListItem from './PostListItem';\nimport { mdx } from '../types/allMdx';\n\nconst pageSize = 5;\n\nconst TagPage = ({ data, pageContext }) => {\n  const mdxs: mdx[] = data.allFile.nodes.map(node => node.childMdx);\n  const [posts, setPosts] = useState<mdx[]>(mdxs.slice(0, pageSize));\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n\n  const onScroll = useCallback(\n    e => {\n      const bottom =\n        window.innerHeight + window.pageYOffset >= document.body.offsetHeight;\n\n      if (bottom) {\n        if (posts.length < mdxs.length) {\n          setPosts(prev => [\n            ...prev,\n            ...mdxs.slice(prev.length, prev.length + pageSize),\n          ]);\n        }\n      }\n      return;\n    },\n    [posts, mdxs, pageSize],\n  );\n\n  return (\n    <Frame title={pageContext.tag ? `# ${pageContext.tag}` : `포스트 목록`}>\n      <div>\n        {posts.map(mdx => (\n          <PostListItem\n            linkTo={`/posts/${mdx.slug}`}\n            title={mdx.frontmatter.title}\n            date={mdx.frontmatter.date}\n            tags={mdx.frontmatter.tag.sort()}\n            key={mdx.slug}\n          />\n        ))}\n      </div>\n    </Frame>\n  );\n};\n\nexport const query = graphql`\n  query ($tag: String) {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: \"post\" }\n        childMdx: { frontmatter: { draft: { eq: false }, tag: { eq: $tag } } }\n      }\n      sort: { fields: childMdx___frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        childMdx {\n          slug\n          frontmatter {\n            tag\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const searchInputContainer = css`\n  display: flex;\n  flex-direction: row;\n  border-radius: 4px;\n  border: 1px solid gainsboro;\n  width: 240px;\n  margin-bottom: 13px;\n`;\n\nexport const sharp = css`\n  margin-left: 7px;\n  margin-right: 4px;\n  font-size: 20px;\n`;\n\nexport const searchInput = css`\n  flex: 1;\n  border: none;\n  padding: 6px;\n  font-size: 18px;\n  &:focus {\n    outline: none !important;\n  }\n`;\n\nexport const TagButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n"],"names":["btnStyle","props","to","tag","css","containerStyle","titleStyle","dateStyle","tags","map","TagBtn","key","linkTo","title","date","data","pageContext","mdxs","allFile","nodes","node","childMdx","useState","slice","posts","setPosts","useEffect","window","addEventListener","onScroll","removeEventListener","useCallback","e","innerHeight","pageYOffset","document","body","offsetHeight","length","prev","Frame","mdx","slug","frontmatter","sort","searchInputContainer","sharp","searchInput","TagButtonsContainer"],"sourceRoot":""}